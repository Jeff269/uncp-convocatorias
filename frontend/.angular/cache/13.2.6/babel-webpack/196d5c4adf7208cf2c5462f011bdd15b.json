{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\xampp\\\\htdocs\\\\www\\\\SISConvocatorias\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthAdminGuard {\n  constructor(auth, router) {\n    this.auth = auth;\n    this.router = router;\n  }\n\n  canActivate() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      //return true;\n      yield _this.auth.validarLoginPromise().then(res => {\n        //console.log(res)\n        if (res.code == 200 && res.privilegios == 1) {\n          //console.log(res)\n          //console.log(\"acceso autorizado\");\n          return true;\n        } else {\n          if (res.code == 200 && res.privilegios == 0) {\n            //console.log(\"acceso denegado\");\n            _this.router.navigate(['/']);\n\n            return false;\n          } else {\n            if (res.code == 300) {\n              _this.router.navigate(['/unauthorized']);\n\n              return false;\n            } else {\n              console.log(\"Error al identificar usuario\");\n\n              _this.auth.removeToken();\n\n              window.location.href = '/login.php';\n              return false;\n            }\n          }\n        }\n      });\n      return true;\n    })();\n  }\n\n  canActivateChild() {\n    return true;\n  }\n\n}\n\nAuthAdminGuard.ɵfac = function AuthAdminGuard_Factory(t) {\n  return new (t || AuthAdminGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n};\n\nAuthAdminGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthAdminGuard,\n  factory: AuthAdminGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:/xampp/htdocs/www/SISConvocatorias/frontend/src/app/auth-admin.guard.ts"],"names":["i0","i1","i2","AuthAdminGuard","constructor","auth","router","canActivate","validarLoginPromise","then","res","code","privilegios","navigate","console","log","removeToken","window","location","href","canActivateChild","ɵfac","AuthAdminGuard_Factory","t","ɵɵinject","AuthService","Router","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,gBAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,iBAApB;AACA,OAAO,MAAMC,cAAN,CAAqB;AACxBC,EAAAA,WAAW,CAACC,IAAD,EAAOC,MAAP,EAAe;AACtB,SAAKD,IAAL,GAAYA,IAAZ;AACA,SAAKC,MAAL,GAAcA,MAAd;AACH;;AACKC,EAAAA,WAAW,GAAG;AAAA;;AAAA;AAChB;AACA,YAAM,KAAI,CAACF,IAAL,CAAUG,mBAAV,GAAgCC,IAAhC,CAAqCC,GAAG,IAAI;AAC9C;AACA,YAAIA,GAAG,CAACC,IAAJ,IAAY,GAAZ,IAAmBD,GAAG,CAACE,WAAJ,IAAmB,CAA1C,EAA6C;AACzC;AACA;AACA,iBAAO,IAAP;AACH,SAJD,MAKK;AACD,cAAIF,GAAG,CAACC,IAAJ,IAAY,GAAZ,IAAmBD,GAAG,CAACE,WAAJ,IAAmB,CAA1C,EAA6C;AACzC;AACA,YAAA,KAAI,CAACN,MAAL,CAAYO,QAAZ,CAAqB,CAAC,GAAD,CAArB;;AACA,mBAAO,KAAP;AACH,WAJD,MAKK;AACD,gBAAIH,GAAG,CAACC,IAAJ,IAAY,GAAhB,EAAqB;AACjB,cAAA,KAAI,CAACL,MAAL,CAAYO,QAAZ,CAAqB,CAAC,eAAD,CAArB;;AACA,qBAAO,KAAP;AACH,aAHD,MAIK;AACDC,cAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;;AACA,cAAA,KAAI,CAACV,IAAL,CAAUW,WAAV;;AACAC,cAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,YAAvB;AACA,qBAAO,KAAP;AACH;AACJ;AACJ;AACJ,OA1BK,CAAN;AA2BA,aAAO,IAAP;AA7BgB;AA8BnB;;AACDC,EAAAA,gBAAgB,GAAG;AACf,WAAO,IAAP;AACH;;AAtCuB;;AAwC5BjB,cAAc,CAACkB,IAAf,GAAsB,SAASC,sBAAT,CAAgCC,CAAhC,EAAmC;AAAE,SAAO,KAAKA,CAAC,IAAIpB,cAAV,EAA0BH,EAAE,CAACwB,QAAH,CAAYvB,EAAE,CAACwB,WAAf,CAA1B,EAAuDzB,EAAE,CAACwB,QAAH,CAAYtB,EAAE,CAACwB,MAAf,CAAvD,CAAP;AAAwF,CAAnJ;;AACAvB,cAAc,CAACwB,KAAf,GAAuB,aAAc3B,EAAE,CAAC4B,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAE1B,cAAT;AAAyB2B,EAAAA,OAAO,EAAE3B,cAAc,CAACkB,IAAjD;AAAuDU,EAAAA,UAAU,EAAE;AAAnE,CAAtB,CAArC","sourcesContent":["import * as i0 from \"@angular/core\";\r\nimport * as i1 from \"./auth.service\";\r\nimport * as i2 from \"@angular/router\";\r\nexport class AuthAdminGuard {\r\n    constructor(auth, router) {\r\n        this.auth = auth;\r\n        this.router = router;\r\n    }\r\n    async canActivate() {\r\n        //return true;\r\n        await this.auth.validarLoginPromise().then(res => {\r\n            //console.log(res)\r\n            if (res.code == 200 && res.privilegios == 1) {\r\n                //console.log(res)\r\n                //console.log(\"acceso autorizado\");\r\n                return true;\r\n            }\r\n            else {\r\n                if (res.code == 200 && res.privilegios == 0) {\r\n                    //console.log(\"acceso denegado\");\r\n                    this.router.navigate(['/']);\r\n                    return false;\r\n                }\r\n                else {\r\n                    if (res.code == 300) {\r\n                        this.router.navigate(['/unauthorized']);\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        console.log(\"Error al identificar usuario\");\r\n                        this.auth.removeToken();\r\n                        window.location.href = '/login.php';\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return true;\r\n    }\r\n    canActivateChild() {\r\n        return true;\r\n    }\r\n}\r\nAuthAdminGuard.ɵfac = function AuthAdminGuard_Factory(t) { return new (t || AuthAdminGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router)); };\r\nAuthAdminGuard.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: AuthAdminGuard, factory: AuthAdminGuard.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}