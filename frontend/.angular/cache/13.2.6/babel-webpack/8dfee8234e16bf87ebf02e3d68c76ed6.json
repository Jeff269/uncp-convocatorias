{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\mini4\\\\progra\\\\Talento Humano\\\\uncp-convocatorias\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthUserlogGuard {\n  constructor(auth, router) {\n    this.auth = auth;\n    this.router = router;\n  }\n\n  canActivate() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      //return true;\n      yield _this.auth.intranet_validarLoginPromise().then(res => {\n        console.log(res);\n\n        if (res.code == 300) {\n          return true;\n        } else {\n          if (res.code == 200) {\n            //console.log(res)\n            //console.log(\"token valido\");\n            _this.router.navigate(['/intranet']);\n\n            return false;\n          } else {\n            if (res.code == 404) {\n              //console.log(\"token invalido\");\n              _this.auth.intranet_removeToken();\n\n              _this.router.navigate(['/login']); //this.router.navigate(['/login.php']);\n\n\n              return false;\n            } else {\n              console.log(\"error con la base de datos\");\n\n              _this.auth.intranet_removeToken();\n\n              _this.router.navigate(['/login']);\n\n              return false;\n            }\n          }\n        }\n      });\n      return true;\n    })();\n  }\n\n}\n\nAuthUserlogGuard.ɵfac = function AuthUserlogGuard_Factory(t) {\n  return new (t || AuthUserlogGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n};\n\nAuthUserlogGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthUserlogGuard,\n  factory: AuthUserlogGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:/Users/mini4/progra/Talento Humano/uncp-convocatorias/frontend/src/app/auth-userlog.guard.ts"],"names":["i0","i1","i2","AuthUserlogGuard","constructor","auth","router","canActivate","intranet_validarLoginPromise","then","res","console","log","code","navigate","intranet_removeToken","ɵfac","AuthUserlogGuard_Factory","t","ɵɵinject","AuthService","Router","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,gBAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,iBAApB;AACA,OAAO,MAAMC,gBAAN,CAAuB;AAC1BC,EAAAA,WAAW,CAACC,IAAD,EAAOC,MAAP,EAAe;AACtB,SAAKD,IAAL,GAAYA,IAAZ;AACA,SAAKC,MAAL,GAAcA,MAAd;AACH;;AACKC,EAAAA,WAAW,GAAG;AAAA;;AAAA;AAChB;AACA,YAAM,KAAI,CAACF,IAAL,CAAUG,4BAAV,GAAyCC,IAAzC,CAA8CC,GAAG,IAAI;AACvDC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;;AACA,YAAIA,GAAG,CAACG,IAAJ,IAAY,GAAhB,EAAqB;AACjB,iBAAO,IAAP;AACH,SAFD,MAGK;AACD,cAAIH,GAAG,CAACG,IAAJ,IAAY,GAAhB,EAAqB;AACjB;AACA;AACA,YAAA,KAAI,CAACP,MAAL,CAAYQ,QAAZ,CAAqB,CAAC,WAAD,CAArB;;AACA,mBAAO,KAAP;AACH,WALD,MAMK;AACD,gBAAIJ,GAAG,CAACG,IAAJ,IAAY,GAAhB,EAAqB;AACjB;AACA,cAAA,KAAI,CAACR,IAAL,CAAUU,oBAAV;;AACA,cAAA,KAAI,CAACT,MAAL,CAAYQ,QAAZ,CAAqB,CAAC,QAAD,CAArB,EAHiB,CAIjB;;;AACA,qBAAO,KAAP;AACH,aAND,MAOK;AACDH,cAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;;AACA,cAAA,KAAI,CAACP,IAAL,CAAUU,oBAAV;;AACA,cAAA,KAAI,CAACT,MAAL,CAAYQ,QAAZ,CAAqB,CAAC,QAAD,CAArB;;AACA,qBAAO,KAAP;AACH;AACJ;AACJ;AACJ,OA5BK,CAAN;AA6BA,aAAO,IAAP;AA/BgB;AAgCnB;;AArCyB;;AAuC9BX,gBAAgB,CAACa,IAAjB,GAAwB,SAASC,wBAAT,CAAkCC,CAAlC,EAAqC;AAAE,SAAO,KAAKA,CAAC,IAAIf,gBAAV,EAA4BH,EAAE,CAACmB,QAAH,CAAYlB,EAAE,CAACmB,WAAf,CAA5B,EAAyDpB,EAAE,CAACmB,QAAH,CAAYjB,EAAE,CAACmB,MAAf,CAAzD,CAAP;AAA0F,CAAzJ;;AACAlB,gBAAgB,CAACmB,KAAjB,GAAyB,aAActB,EAAE,CAACuB,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAErB,gBAAT;AAA2BsB,EAAAA,OAAO,EAAEtB,gBAAgB,CAACa,IAArD;AAA2DU,EAAAA,UAAU,EAAE;AAAvE,CAAtB,CAAvC","sourcesContent":["import * as i0 from \"@angular/core\";\r\nimport * as i1 from \"./auth.service\";\r\nimport * as i2 from \"@angular/router\";\r\nexport class AuthUserlogGuard {\r\n    constructor(auth, router) {\r\n        this.auth = auth;\r\n        this.router = router;\r\n    }\r\n    async canActivate() {\r\n        //return true;\r\n        await this.auth.intranet_validarLoginPromise().then(res => {\r\n            console.log(res);\r\n            if (res.code == 300) {\r\n                return true;\r\n            }\r\n            else {\r\n                if (res.code == 200) {\r\n                    //console.log(res)\r\n                    //console.log(\"token valido\");\r\n                    this.router.navigate(['/intranet']);\r\n                    return false;\r\n                }\r\n                else {\r\n                    if (res.code == 404) {\r\n                        //console.log(\"token invalido\");\r\n                        this.auth.intranet_removeToken();\r\n                        this.router.navigate(['/login']);\r\n                        //this.router.navigate(['/login.php']);\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        console.log(\"error con la base de datos\");\r\n                        this.auth.intranet_removeToken();\r\n                        this.router.navigate(['/login']);\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return true;\r\n    }\r\n}\r\nAuthUserlogGuard.ɵfac = function AuthUserlogGuard_Factory(t) { return new (t || AuthUserlogGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router)); };\r\nAuthUserlogGuard.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: AuthUserlogGuard, factory: AuthUserlogGuard.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}